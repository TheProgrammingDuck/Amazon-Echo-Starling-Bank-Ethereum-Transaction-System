(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['module', 'axios', 'debug', '../utils/http', '../utils/validator'], factory);
  } else if (typeof exports !== "undefined") {
    factory(module, require('axios'), require('debug'), require('../utils/http'), require('../utils/validator'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod, global.axios, global.debug, global.http, global.validator);
    global.savingsGoals = mod.exports;
  }
})(this, function (module, _axios, _debug, _http, _validator) {
  'use strict';

  var _axios2 = _interopRequireDefault(_axios);

  var _debug2 = _interopRequireDefault(_debug);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var _createClass = function () {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    return function (Constructor, protoProps, staticProps) {
      if (protoProps) defineProperties(Constructor.prototype, protoProps);
      if (staticProps) defineProperties(Constructor, staticProps);
      return Constructor;
    };
  }();

  var log = (0, _debug2.default)('starling:saving-goals-service');

  /**
   * Service to interact with a customer's savings goals
   */

  var SavingsGoals = function () {
    /**
     * Create a new savings goal service
     * @param {Object} options - configuration parameters
     */
    function SavingsGoals(options) {
      _classCallCheck(this, SavingsGoals);

      this.options = options;
    }

    /**
     * Gets a list of the customer's savings goals
     * @param {string} accessToken - the oauth bearer token.
     * @return {Promise} - the http request promise
     */


    _createClass(SavingsGoals, [{
      key: 'listSavingsGoals',
      value: function listSavingsGoals(accessToken) {
        (0, _validator.typeValidation)(arguments, listSavingsGoalsParameterDefinition);
        var url = this.options.apiUrl + '/api/v1/savings-goals';
        log('GET ' + url);
        return (0, _axios2.default)({
          method: 'GET',
          url: url,
          headers: (0, _http.defaultHeaders)(accessToken)
        });
      }
    }, {
      key: 'getSavingsGoal',
      value: function getSavingsGoal(accessToken, savingsGoalId) {
        (0, _validator.typeValidation)(arguments, getSavingsGoalParameterDefinition);
        var url = this.options.apiUrl + '/api/v1/savings-goals/' + savingsGoalId;
        log('GET ' + url);
        return (0, _axios2.default)({
          method: 'GET',
          url: url,
          headers: (0, _http.defaultHeaders)(accessToken)
        });
      }
    }, {
      key: 'createSavingsGoal',
      value: function createSavingsGoal(accessToken, savingsGoalId, name, currency, targetAmount, targetCurrency, base64EncodedPhoto) {
        (0, _validator.typeValidation)(arguments, createSavingsGoalParameterDefinition);
        var url = this.options.apiUrl + '/api/v1/savings-goals/' + savingsGoalId;
        log('PUT ' + url);
        return (0, _axios2.default)({
          method: 'PUT',
          url: url,
          headers: (0, _http.postHeaders)(accessToken),
          data: JSON.stringify({
            name: name,
            currency: currency,
            target: {
              targetAmount: targetAmount,
              targetCurrency: targetCurrency
            },
            base64EncodedPhoto: base64EncodedPhoto
          })
        });
      }
    }, {
      key: 'deleteSavingsGoal',
      value: function deleteSavingsGoal(accessToken, savingsGoalId) {
        (0, _validator.typeValidation)(arguments, deleteSavingsGoalParameterDefinition);
        var url = this.options.apiUrl + '/api/v1/savings-goals/' + savingsGoalId;
        log('DELETE ' + url);
        return (0, _axios2.default)({
          method: 'DELETE',
          url: url,
          headers: (0, _http.defaultHeaders)(accessToken)
        });
      }
    }]);

    return SavingsGoals;
  }();

  var listSavingsGoalsParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }];

  var getSavingsGoalParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'savingsGoalId', validations: ['required', 'string'] }];

  var deleteSavingsGoalParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'savingsGoalId', validations: ['required', 'string'] }];

  var createSavingsGoalParameterDefinition = [{ name: 'accessToken', validations: ['required', 'string'] }, { name: 'savingsGoalId', validations: ['required', 'string'] }, { name: 'name', validations: ['required', 'string'] }, { name: 'currency', validations: ['required', 'string'] }, { name: 'targetAmount', validations: ['optional', 'number'] }, { name: 'targetCurrency', validations: ['optional', 'string'] }, { name: 'base64EncodedPhoto', validations: ['optional', 'string'] }];

  module.exports = SavingsGoals;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=savingsGoals.js.map
