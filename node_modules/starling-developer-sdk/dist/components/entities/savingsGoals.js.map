{"version":3,"names":[],"mappings":"","sources":["entities/savingsGoals.js"],"sourcesContent":["import axios from 'axios';\nimport debug from 'debug';\nimport { defaultHeaders, postHeaders } from '../utils/http';\nimport { typeValidation } from '../utils/validator';\n\nconst log = debug('starling:saving-goals-service');\n\n/**\n * Service to interact with a customer's savings goals\n */\nclass SavingsGoals {\n  /**\n   * Create a new savings goal service\n   * @param {Object} options - configuration parameters\n   */\n  constructor (options) {\n    this.options = options;\n  }\n\n  /**\n   * Gets a list of the customer's savings goals\n   * @param {string} accessToken - the oauth bearer token.\n   * @return {Promise} - the http request promise\n   */\n  listSavingsGoals (accessToken) {\n    typeValidation(arguments, listSavingsGoalsParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals`;\n    log(`GET ${url}`);\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Gets a specific savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the savings goal's ID.\n   * @return {Promise} - the http request promise\n   */\n  getSavingsGoal (accessToken, savingsGoalId) {\n    typeValidation(arguments, getSavingsGoalParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals/${savingsGoalId}`;\n    log(`GET ${url}`);\n    return axios({\n      method: 'GET',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n\n  /**\n   * Creates a savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the savings goal's ID, generate one if creating a goal.\n   * @param {string} name - the name of the new contact.\n   * @param {string} currency - the currency of the savings goal. Defaults to 'GBP'.\n   * @param {number} targetAmount - the target amount in minor units (e.g. 1234 => Â£12.34).\n   * @param {string} targetCurrency - the target currency, also defaults to 'GBP'.\n   * @param {string} base64EncodedPhoto - base64 encoded image to associate with the goal. (optional)\n   * @return {Promise} - the http request promise\n   */\n  createSavingsGoal (accessToken, savingsGoalId, name, currency, targetAmount, targetCurrency, base64EncodedPhoto) {\n    typeValidation(arguments, createSavingsGoalParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals/${savingsGoalId}`;\n    log(`PUT ${url}`);\n    return axios({\n      method: 'PUT',\n      url,\n      headers: postHeaders(accessToken),\n      data: JSON.stringify({\n        name,\n        currency,\n        target: {\n          targetAmount,\n          targetCurrency\n        },\n        base64EncodedPhoto\n      })\n    });\n  }\n\n  /**\n   * Deletes specific savings goal\n   * @param {string} accessToken - the oauth bearer token.\n   * @param {string} savingsGoalId - the unique mandate ID\n   * @return {Promise} - the http request promise\n   */\n  deleteSavingsGoal (accessToken, savingsGoalId) {\n    typeValidation(arguments, deleteSavingsGoalParameterDefinition);\n    const url = `${this.options.apiUrl}/api/v1/savings-goals/${savingsGoalId}`;\n    log(`DELETE ${url}`);\n    return axios({\n      method: 'DELETE',\n      url,\n      headers: defaultHeaders(accessToken)\n    });\n  }\n}\n\nconst listSavingsGoalsParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] }\n];\n\nconst getSavingsGoalParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] },\n  { name: 'savingsGoalId', validations: [ 'required', 'string' ] }\n];\n\nconst deleteSavingsGoalParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] },\n  { name: 'savingsGoalId', validations: [ 'required', 'string' ] }\n];\n\nconst createSavingsGoalParameterDefinition = [\n  { name: 'accessToken', validations: [ 'required', 'string' ] },\n  { name: 'savingsGoalId', validations: [ 'required', 'string' ] },\n  { name: 'name', validations: [ 'required', 'string' ] },\n  { name: 'currency', validations: [ 'required', 'string' ] },\n  { name: 'targetAmount', validations: [ 'optional', 'number' ] },\n  { name: 'targetCurrency', validations: [ 'optional', 'string' ] },\n  { name: 'base64EncodedPhoto', validations: [ 'optional', 'string' ] }\n];\n\nmodule.exports = SavingsGoals;\n"],"file":"savingsGoals.js"}